@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section header{
    <script src="@Url.Content("~/Scripts/zPageGrid1.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/zPageGrid2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Mobile/zIndex.js")" type="text/javascript"></script>
    <script type="text/javascript">
      $(document).ready(function () {
        $("#accordion").accordion(); 
      });    
    </script>
}

<h2>Index - Mobile</h2>

<div align="center">
  @Html.ActionLink("ex-01", "page01", "Mobile")&nbsp;
  @Html.ActionLink("ex-02", "page02", "Mobile")&nbsp;
  @Html.ActionLink("ex-03", "page03", "Mobile")&nbsp;  
  @Html.ActionLink("ex-04", "page04", "Mobile")&nbsp; 
  @Html.ActionLink("ex-05", "page05", "Mobile")&nbsp;   
  @Html.ActionLink("ex-06", "page06", "Mobile")&nbsp;  
</div>

<br /><br />

<div>
   <p align="justify">
   The example on this page use the same action method as the example (ex-05). The javascript
   framework has been build on 2 level. The core (PagingBase object into file zPageGrid1.js)
   provide the core functionality for query data in 2 way (linq enabled/linq not enabled ).
   There are also 2 plugin that wrap the PagingBase object: 1) for normal web page 2) for 
   mobile page that use jquery mobile. In this way ajax's request call are provided from the
   same base object. Both the example (this page and ex-07) use the same action method.<br />
   </p>    
   <div id="accordion">
     <h3><a href="#">example-01</a></h3>
     <div>
       This is an empty multipage application.
     </div>
     <h3><a href="#">example-02</a></h3>
     <div>
       In this example there are 3 page. The first fetch all data with paging enabled. The second
       fetch only data where country='germany'. The third fetch only data where country='Sweden'.
     </div>
     <h3><a href="#">example-03</a></h3>
     <div>
       In this example there are 3 page. The first is a form-serch page. The second fetch 
       data from the search conditions (on page definition you can see "data-jparam01='#text1'", "data-jparam02='#text2'"
       this tell the framework which are the test field to use for the search).The third is a detail page of the selected item (it not go on db).
       On this page you cab see "data-jresturl='none'", this tell to the framework do not sends a rest call,
       it take the current item. The current item is selected when you apply "data-jsavecurritem='true'" on 
       the template link. Navigation button have "data-jnavbaraction='refresh'" that tell the framework which command apply.
     </div>
     <h3><a href="#">example-04</a></h3>
     <div>
       In this example there are 3 page. The first is a form-serch page. The second fetch 
       data from the search conditions (on page definition you can see "data-jparam01='#text1'", "data-jparam02='#text2'"
       this tell the framework which are the test field to use for the search). The third is a detail page of the selected item (it go on db  ).
       On this page you cab see "data-jresturl='value'", this tell to the framework sends a rest call,
       it take the current item and then create a link. On page definition you can see data-jparam01="*City" .
       The current item is selected when you apply "data-jsavecurritem='true'" on the template link.
       Navigation button have "data-jnavbaraction='refresh'" that tell the framework which command apply.
     </div>  
     <h3><a href="#">example-05</a></h3>
     <div>
       Same as example-04 but it has linq enabled. In the code behind there is an event
       'selecting1' where is specified a query specified.
     </div>
     <h3><a href="#">example-06</a></h3>
     <div>
       Same as example-02 but with "jautorun=false" and a single page. In this case the 
       data are not retrived when the page is loaded, but when I click the link  "<a data-jselectaction='true'>Find</a>"
     </div>
   </div>  
   <br /><br />     
   <input id="gbutton1" type="button" value="Search" />&nbsp;
   <input id="gbutton2" type="button" value="MoveF"  />&nbsp;
   <input id="gbutton3" type="button" value="MoveP"  />&nbsp;
   <input id="gbutton4" type="button" value="MoveN"  />&nbsp;
   <input id="gbutton5" type="button" value="MoveL"  />&nbsp;
</div>

<br /><br />

<div id="gpane1" style="display:none">
  <div>
    <table> 
    <tr>
      <td>City: </td>
      <td><input id="text1" type="text" /></td>
    </tr>  
    <tr>
      <td>Country: </td>
      <td><input id="text2" type="text" /></td>
    </tr> 
    </table>
    <br /><br />
    <input id="gbutton6" type="button" value="Find" />
  </div>
</div>

<div id="gpane2" style="display:none">
  <div>
    <table id="jtable">
    <thead>
    <tr>
      <td data-sort="CustomerID"> CustomerID </td>
      <td data-sort="CompanyName"> CompanyName </td>
      <td data-sort="ContactName"> ContactName </td>
      <td data-sort="ContactTitle"> ContactTitle </td>
      <td data-sort="Address"> Address </td>
      <td data-sort="City"> City </td>
      <td data-sort="Country"> Country </td>
    </tr>
    </thead>
    <tbody id="jlist"></tbody>
    </table>
  </div>
</div>

<br /><br />

<div>
<table>
<tr>
<td width="200">attribute</td>
<td>description</td>
</tr>

<tr>
<td>data-jlinqenabled</td>
<td>
<div align="justify">
Specify if linq is enabled.
</div>
</td>
</tr>

<tr>
<td>data-jresturl</td>
<td>
<div align="justify">
Specify the url.
</div>
</td>
</tr>

<tr>
<td>data-jpagesize</td>
<td>
<div align="justify">
Specify the pagesize. Optionale if not specified pagesize=9999 and paging is not enabled.
</div>
</td>
</tr>

<tr>
<td>data-jtypetemplate</td>
<td>
<div align="justify">
Specify template's type (client jquery template/ server partialview).
</div>
</td>
</tr>

<tr>
<td>data-jnametemplate</td>
<td>
<div align="justify">
Specify template's name
</div>
</td>
</tr>

<tr>
<td>data-jcontainer</td>
<td>
<div align="justify">
This is the container of the template
</div>
</td>
</tr>

<tr>
<td>data-jparam01/data-jparam05</td>
<td>
<div align="justify">
Specify search's param. There are 3 type of param. 1) value: data-jparam01="germany".
 2) data: data-jparam01="*country" you reference the field "country" of the previous
 page. In this case in the previous page you must have a link with this  attribute 
 data-jsavecurritem="true", this specify to transfer data from origin  and destination 
 page. You create a data link. 3) text: data-jparam01="#filed1" you reference an input
 tag of name "filed1".
 </div>
</td>
</tr>

<tr>
<td>data-jfselecting</td>
<td>
<div align="justify">
Specify selecting event.
</div>
</td>
</tr>

<tr>
<td>data-jfdatabound</td>
<td>
<div align="justify">
Specify databound event.
</div>
</td>
</tr>

<tr>
<td>data-jfisloading</td>
<td>
<div align="justify">
Specify isloading event.
</div>
</td>
</tr>

<tr>
<td>data-jsavecurritem="true"</td>
<td>
<div align="justify">
On a link's template tell the framework that pass dataitem to the next page.
</div>
</td>
</tr>

<tr>
<td>data-jautorun="false"</td>
<td>
<div align="justify">
On the page definitions tell the framework do not start search automaticaly. The search
start when you press a link where there is an attribute data-jselectaction="true".
</div>
</td>
</tr>

<tr>
<td>data-jselectaction="true"</td>
<td>
<div align="justify">
On a link's search form tell the framework that start the search.
</div>
</td>
</tr>

</table>
</div>

<br /><br />

<script id="jtableTemplate" type="text/x-jquery-tmpl">
<tr>
  <td> ${CustomerID} </td>
  <td> ${CompanyName} </td>
  <td> ${ContactName} </td>
  <td> ${ContactTitle} </td>
  <td> ${Address} </td>
  <td> ${City} </td>
  <td> ${Country} </td>
</tr>
</script>
